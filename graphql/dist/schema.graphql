scalar DateTime

type Like {
  createdAt: DateTime
  id: ID!
  likeUser: User!
  memo: Memo!
}

type Memo {
  content: String!
  createdAt: DateTime
  id: ID!
  like: [Like]!
  likeNum: Int!
  user: User!
}

type Mutation {
  addMemo(content: String!, userId: ID!): Memo!
  deleteMemo(id: ID!): Memo!
  likeMemo(id: ID!, userId: ID!): Like!
  likeMemoDelete(id: ID!): Like!
  signin(email: String!, password: String!): User!
  signup(email: String!, name: String!, password: String!): User!
  updateMemo(content: String!, id: ID!): Memo!
}

type Query {
  memo(memoId: String!): Memo
  memos: [Memo]
  user(userId: String!): User
  users: [User]
}

type User {
  email: String!
  id: ID!
  memos: [Memo]
  name: String!
  password: String!
}